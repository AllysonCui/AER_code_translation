/*	Market Structure, Oligopsony Power, and Productivity			(Michael Rubens, UCLA)		- MODEL WITH LEAF SUPPLY SIDE without TFP instrument -========================================================*/cd "$station"set more offuse ./Data/china_tobacco_data, clearset matsize 11000   xtset fid yrgen const = 1timer on 1			 	/* 1. Production function---------------------------*/xtset fid yrforeach var of varlist lq lk lemp treat_dq5 treat02_dq6 post02 luw lp lm{gen `var'_lag = L.`var'		// make lagged variables} gmm (lq - {rho}*L.lq - ({bk})*(lk-{rho}*L.lk) - {bl}*(lemp - {rho}*L.lemp)  - {bp}*(lp - {rho}*L.lp) /// - {bc1}*(treat02_dq6 - {rho}*L.treat02_dq6) - {bc2}*(treat_dq6 - {rho}*L.treat_dq6)- {bc3}*(post02 - {rho}*L.post02)- {bw}*(luw - {rho}*L.luw)  - {c}*(1-{rho}) )   , ///inst(lk   luw lp    L.lemp    L.lk L.lp   L.luw treat_dq6 treat02_dq6 post02 )    matrix pfest_end = e(b)gen beta_k_bb = pfest_end[1,2]gen beta_l_bb = pfest_end[1,3]gen beta_p_bb = pfest_end[1,4]gen beta_c1_bb = pfest_end[1,5]gen beta_c2_bb = pfest_end[1,6]gen beta_c3_bb = pfest_end[1,7]gen beta_uw_bb = pfest_end[1,8]gen beta_c_bb = pfest_end[1,9]gen scale_bb = beta_k_bb + beta_l_bb gen ltfp_bb = lq - beta_l_bb*lemp - beta_k_bb*lk   - beta_c_bb 		// make tfp residualgen tfp_bb = exp(ltfp_bb)/* 2. Input supply function----------------------------*/ global share = 0.117647    forvalues m = 2(2)6 {bys dq`m'id yr: egen pop_lab_dq`m' = sum(pop_lab)bys dq`m'id yr: egen poptab_dq`m' = sum(q*$share)gen qshare_dq`m' = q*$share/pop_lab_dq`m'gen lqshare_dq`m' = log(qshare_dq`m')gen qshare_nest_dq`m' = q*$share/poptab_dq`m'gen lqshare_nest_dq`m' = log(qshare_nest_dq`m')gen oo_dq`m' = (pop_lab_dq`m'-poptab_dq`m')/pop_lab_dq`m'gen loo_dq`m' =  log(oo_dq`m')gen lhs_dq`m' = lqshare_dq`m' - loo_dq`m'	}gen nfarm_f = q*$sharesum nfarm_f, d	// Weather shocks as additional instruments  merge m:1 zip4 using  ./data/climate/county_station_matchingdrop if _merge==2drop _mergemerge m:1 station_num yr using ./data/climate/weatherdata drop if _merge==2drop _merge xtset fid yr reg lpm L.maxtemp  L.raingen lmaxtemp = log(maxtemp)gen lrain = log(rain)gen lavgmaxtemp = log(avgmaxtemp)reg pm L.lmaxtemp  L.lrain  sum maxtemp lrain mintempreg maxtemp  i.zip4id i.yrforvalues m = 2(2)6 {foreach var of varlist tfp_bb {bys dq`m'id yr: egen `var'_dq`m' = sum(`var')gen `var'_ot_dq`m' = `var'_dq`m'-`var'gen l`var'_ot_dq`m' = log(`var'_ot_dq`m')}}preservedrop if rain==. | maxtemp==. |mintemp==. |sunshine==.collapse rain maxtemp mintemp sunshine, by(dq6id dq4id dq2id yr)gen open = 1bys dq2id yr: egen n_dq2 = sum(open)bys dq4id yr: egen n_dq4 = sum(open)foreach var of varlist  rain maxtemp mintemp sunshine {bys dq4id yr: egen `var'_dq4 = sum(`var')gen `var'_dq4_ot = `var'_dq4-`var'gen av_`var'_dq4_ot = `var'_dq4_ot/n_dq4bys dq2id yr: egen `var'_dq2 = sum(`var')gen `var'_dq2_ot = `var'_dq2-`var'_dq4gen av_`var'_dq2_ot = `var'_dq2_ot/n_dq2}keep *ot dq* yrsave ./tempfiles/blp_inst, replacerestoremerge m:1 dq6id dq4id dq2id yr using ./tempfiles/blp_instdrop _merge xtset fid yrtab typeid, gen(dtype)forvalue m = 2(2)6{ bys dq6 yr: egen p_dq`m' = sum(p)gen pot_dq`m' = p_dq`m'-pgen lpot_dq`m' = log(pot_dq`m')} drop *uw_* bys dq6id yr: egen n_dq6 = sum(open)bys dq4id yr: egen n_dq4 = sum(open)bys dq2id yr: egen n_dq2 = sum(open)drop tfp_bb_dq2  tfp_bb_dq4 tfp_bb_dq6foreach var of varlist uw tfp_bb {bys dq2id yr: egen `var'_dq2 = sum(`var')bys dq4id yr: egen `var'_dq4 = sum(`var')bys dq6id yr: egen `var'_dq6 = sum(`var')gen `var'_dq4_ot = `var'_dq4-`var'_dq6gen av_`var'_dq4_ot = `var'_dq4_ot/n_dq4gen `var'_dq2_ot = `var'_dq2-`var'_dq4gen av_`var'_dq2_ot = `var'_dq2_ot/n_dq2gen `var'_dq6_ot = `var'_dq6-`var' gen av_`var'_dq6_ot = `var'_dq6_ot/n_dq6} xtset fid yr// Input supply modelbys dq6id yr: egen nf_dq6 = sum(open)	// number of manufacturers in each countytab nf_dq6 ** nested logitlocal model = "bb" local m = 6			// market = countyivregress 2sls lhs_dq`m' (pm   lqshare_nest_dq`m'  =    nf_dq6 av_mintemp_dq4_ot av_mintemp_dq2_ot  av_maxtemp_dq4_ot  av_maxtemp_dq2_ot av_rain_dq4_ot  av_rain_dq2_ot /// tfp_bb_ot_dq6          )   lrain luw dexp pctexp  mintemp  maxtemp  yr   lp  dhs1 dhs2 dtype1 dtype2 i.dq2id    , first        	  local N_nl = e(N)gen r2 = e(r2)gen str4 r2s = string(r2,"%04.2f")local r2 = r2slocal r2_nl = substr("`r2'",1,4)drop r2 r2sdi `r2_nl'gen gamma_m_nl_dq`m' = _b[pm]gen gamma_x_nl_dq`m' = _b[dexp]gen gamma_sx_nl_dq`m' = _b[pctexp]gen gamma_uw_nl_dq`m' = _b[luw]gen gamma_t1_nl_dq`m' = _b[dtype1]gen gamma_t2_nl_dq`m' = _b[dtype2]gen gamma_yr_nl_dq`m' = _b[yr]gen gamma_p_nl_dq`m' = _b[lp]gen gamma_d1_nl_dq`m' = _b[dhs1]gen gamma_d2_nl_dq`m' = _b[dhs2]gen sigma_nl_dq`m' = _b[lqshare_nest_dq`m'] gen supelast_nl_dq`m' = gamma_m_nl_dq`m'*pm*((1/(1-sigma_nl_dq`m')) - (sigma_nl_dq`m'/(1-sigma_nl_dq`m'))*(qshare_nest_dq`m') -qshare_dq`m')gen md_nl_dq`m' = 1/supelast_nl_dq`m'+1gen lmd_nl_dq`m' = log(md_nl_dq`m')  local F1_nl = "28.25"local F2_nl = "8.11"  * Alternative outside option: only switch to other agricultural occupations gen popnonag = pop - popag   forvalues m = 6(2)6 {gen qsharetris_dq`m' = q*$share/popnonaggen lqsharetris_dq`m' = log(qsharetris_dq`m')gen qsharetris_nest_dq`m' = q*$share/poptab_dq`m'gen lqsharetris_nest_dq`m' = log(qsharetris_nest_dq`m')gen ootris_dq`m' = (popnonag-poptab_dq`m')/popnonaggen lootris_dq`m' =  log(ootris_dq`m')gen lhstris_dq`m' = lqsharetris_dq`m' - lootris_dq`m'	} local m = 6ivregress 2sls lhstris_dq`m' (pm  lqsharetris_nest_dq6  =  nf_dq6     av_mintemp_dq4_ot av_mintemp_dq2_ot  av_maxtemp_dq4_ot  av_maxtemp_dq2_ot av_rain_dq4_ot  av_rain_dq2_ot ///   tfp_bb_ot_dq6     )  lrain luw dexp pctexp   mintemp  maxtemp  yr   lp  dhs* dtype1 dtype2 i.dq2id , first predict lhstris_hat , xb  local N_tris = e(N) gen gamma_m_tris_dq`m' = _b[pm]gen gamma_x_tris_dq`m' = _b[dexp]gen gamma_sx_tris_dq`m' = _b[pctexp]gen gamma_uw_tris_dq`m' = _b[luw]gen gamma_t1_tris_dq`m' = _b[dtype1]gen gamma_t2_tris_dq`m' = _b[dtype2]gen gamma_yr_tris_dq`m' = _b[yr]gen gamma_p_tris_dq`m' = _b[lp]gen gamma_d1_tris_dq`m' = _b[dhs1]gen gamma_d2_tris_dq`m' = _b[dhs2]gen sigma_tris_dq`m' = _b[lqsharetris_nest_dq`m'] gen supelast_tris_dq`m' = gamma_m_tris_dq`m'*pm*((1/(1-sigma_tris_dq`m')) - (sigma_tris_dq`m'/(1-sigma_tris_dq`m'))*(qsharetris_nest_dq`m') -qsharetris_dq`m')gen md_tris_dq`m' = 1/supelast_tris_dq`m'+1gen lmd_tris_dq`m' = log(md_tris_dq`m') reg lhstris_dq6 lhstris_hat  gen r2 = e(r2)gen str4 r2s = string(r2,"%04.2f")local r2 = r2slocal r2_tris = substr("`r2'",1,4)drop r2 r2s /* Store estimates */foreach mod in "nl" "tris" {foreach coef in "m"  "x" "sx" "uw" "t1" "t2" /* "d1" "d2"*/ "yr" "p" {gen gamma_`coef' = gamma_`coef'_`mod'_dq6}gen sigma = sigma_`mod'_dq6estpost su  gamma_m sigma gamma_x gamma_sx gamma_uw gamma_t1 gamma_t2 /* gamma_d1 gamma_d2 */ gamma_p gamma_yr est store leafsup_`mod'drop gamma_m sigma gamma_x gamma_sx gamma_uw gamma_t1 gamma_t2 /* gamma_d1 gamma_d2 */ gamma_p gamma_yr }* First stageslocal m = 6ivregress 2sls lhstris_dq`m' (pm  lqsharetris_nest_dq6  =   nf_dq6   av_mintemp_dq4_ot av_mintemp_dq2_ot  av_maxtemp_dq4_ot  av_maxtemp_dq2_ot av_rain_dq4_ot  av_rain_dq2_ot ///   tfp_bb_ot_dq6     )  lrain luw dexp pctexp   mintemp  maxtemp  yr   lp  dhs* dtype1 dtype2 i.dq2id , first cluster(dq6id)local F1_tris = "27.36"local F2_tris = "20.77"/* 3. Markup estimation--------------------------*/// Calculate markupsgen alphaM = m/revgen alphaL = w/revgen dumobs =  lq~=.  & alphaM~=.& alphaL~=. & lemp~=.  & lk~=.foreach model in "nl" "tris"  {gen muL_`model' = beta_l_bb/alphaLforvalues m = 6(2)6 {gen mu_`model'_dq`m' = (1/muL_`model' + alphaM*md_`model'_dq`m') ^(-1)gen lmu_`model'_dq`m' = log(mu_`model'_dq`m')drop muL_`model'}} egen empyr = sum(emp)gen sempyr = emp/empyrforeach model in "nl" "tris"  {gen smd_`model'_dq6 = md_`model'_dq6 * sempyr  egen agmd_`model'_dq6 = sum(smd_`model'_dq6)  gen smu_`model'_dq6 = mu_`model'_dq6 * sempyr  egen agmu_`model'_dq6 = sum(smu_`model'_dq6)  }   // Summary statistics on markups and markdownstwoway kdensity md_nl_dq6  , lwidth(thick) lcolor(black) legend(label(1 "Markdown ratio ψ")) || kdensity mu_nl_dq6 , lwidth(thick)  lcolor(black) graphregion(color(white))lpattern(dash) legend(label(2 "Markup ratio μ")) xtitle(" ") ytitle("Kernel density") ylabel(, angle(0) ) xlabel(1(1)6)graph export .\paper\figures\fig_markups.pdf, replace  // Save results for tablesforeach var of varlist md*  mu*  {gen av_`var' = ag`var'   egen med_`var' = median(`var')  } drop m forvalues m = 6(2)6 {foreach mod in "nl" "tris"   {gen a_md = av_md_`mod'_dq`m'gen m_md = med_md_`mod'_dq`m'gen a_mu = av_mu_`mod'_dq`m'gen m_mu = med_mu_`mod'_dq`m'estpost su a_md m_md a_mu m_mu  if md_`mod'_dq`m'~=. & mu_`mod'_dq`m'~=.local N_md = e(N)est store md_`mod'_dq`m'drop a_md m_md a_mu m_mu}}sum agmd_nl_dq6 agmu_nl_dq6  	// averages in Table A1(b) sum md_nl_dq6 mu_nl_dq6   , d		// medians in Table A1(b)/* 4. Consolidation treatment effects-----------------------------------------*/// Treatment effects - baselineforeach mod in   "nl" "tris" {forvalues m = 6(2)6 {gen ltfp_`mod'_dq`m' = ltfp_bb}}forvalues m = 6(2)6 {foreach mod in   "nl" "tris" {foreach var in "md" "mu"   {areg l`var'_`mod'_dq`m' treat02_dq`m'  post02   yr if dumobs==1 ,   absorb(fid) r gen th_l`var'_`mod'_dq`m'=_b[treat02_dq`m']gen r2 = e(r2)gen str4 r2s = string(r2,"%04.2f")local r2 = r2slocal r2_`var'_`mod'_dq`m' = substr("`r2'",1,4)local N_`var'_`mod'_dq`m' = e(N)drop r2 r2s}}}    // save results for tablesforeach var of varlist  th*  gamma* sigma*  {egen av`var' = mean(`var')   egen med`var' = median(`var')  }foreach mod in "tris" "nl"  {gen th = th_lmd_`mod'_dq6estpost su thest store th_lmd_`mod'replace th = th_lmu_`mod'_dq6estpost su thest store th_lmu_`mod'drop th }* Markdown and markup moments foreach var in "md_tris"   "md_nl" "mu_tris" "mu_nl"  { gen _`var' = av_`var'_dq6  gen m_`var' = med_`var'_dq6 global a_`var' =  string(_`var',"%04.3f") global m_`var' =  string(m_`var',"%04.3f")}drop _m* m_m*   /* visual */ bys treat_dq6 yr: egen at_md_nl_dq6 = mean(md_nl_dq6)bys treat_dq6 yr: egen mt_md_nl_dq6 = median(md_nl_dq6)twoway connect at_md_nl_dq6 yr if treat_dq6 == 0 || connect at_md_nl_dq6 yr if treat_dq6 == 1, xline(2002)twoway connect mt_md_nl_dq6 yr if treat_dq6 == 0 || connect mt_md_nl_dq6 yr if treat_dq6 == 1, xline(2002)  sum md* mu* th*  /*  Bootstrapping  ----------------------------*/ do ./bootstrap/china_tobacco_ap_nestedlogit_bis_bs/* Write tables ----------------------------*/foreach coef in "m"  "x" "sx" "uw" "t1" "t2" "d1" "d2" "yr" "p" {gen gamma_`coef' = .}foreach coef in  "m_mu"  "a_mu" {gen `coef' = .}gen sigma = .label var sigma "Nesting parameter "label var gamma_m "Leaf price  "label var gamma_x  "1(Exporter)"label var gamma_sx "Export share of revenue"label var gamma_uw "Wage"label var gamma_t2 "1(Collective firm)"label var gamma_t1 "1(SOE) "label var gamma_yr "Year"label var gamma_d1 "1(Leaf drying)"label var gamma_d2 "1(Only sells cigarettes)"label var gamma_p "Cigarette price" ** confidence intervals  di $m_md_trislocal a_md_tris = substr("$a_md_tris",1,5) local a_md_tris_p5 = substr("$a_md_tris_p5",1,5) local a_md_tris_p10 = substr("$a_md_tris_p10",1,5) local a_md_tris_p90 = substr("$a_md_tris_p90",1,5) local a_md_tris_p95 = substr("$a_md_tris_p95",1,5) local a_md_nl = substr("$a_md_nl",1,5) local a_md_nl_p5 = substr("$a_md_nl_p5",1,5) local a_md_nl_p95 = substr("$a_md_nl_p95",1,5) local a_md_nl_p10 = substr("$a_md_nl_p10",1,5) local a_md_nl_p90 = substr("$a_md_nl_p90",1,5) local m_md_tris = substr("$m_md_tris",1,5) local m_md_tris_p5 = substr("$m_md_tris_p5",1,5) local m_md_tris_p10 = substr("$m_md_tris_p10",1,5) local m_md_tris_p90 = substr("$m_md_tris_p90",1,5) local m_md_tris_p95 = substr("$m_md_tris_p95",1,5) local m_md_nl = substr("$m_md_nl",1,5) local m_md_nl_p5 = substr("$m_md_nl_p5",1,5) local m_md_nl_p95 = substr("$m_md_nl_p95",1,5) local m_md_nl_p10 = substr("$m_md_nl_p10",1,5) local m_md_nl_p90 = substr("$m_md_nl_p90",1,5) di `a_md_nl_p90'local a_mu_tris = substr("$a_mu_tris",1,5) local a_mu_tris_p5 = substr("$a_mu_tris_p5",1,5) local a_mu_tris_p10 = substr("$a_mu_tris_p10",1,5) local a_mu_tris_p90 = substr("$a_mu_tris_p90",1,5) local a_mu_tris_p95 = substr("$a_mu_tris_p95",1,5) local a_mu_nl = substr("$a_mu_nl",1,5) local a_mu_nl_p5 = substr("$a_mu_nl_p5",1,5) local a_mu_nl_p95 = substr("$a_mu_nl_p95",1,5) local a_mu_nl_p10 = substr("$a_mu_nl_p10",1,5) local a_mu_nl_p90 = substr("$a_mu_nl_p90",1,5) local m_mu_tris = substr("$m_mu_tris",1,5) local m_mu_tris_p5 = substr("$m_mu_tris_p5",1,5) local m_mu_tris_p10 = substr("$m_mu_tris_p10",1,5) local m_mu_tris_p90 = substr("$m_mu_tris_p90",1,5) local m_mu_tris_p95 = substr("$m_mu_tris_p95",1,5) local m_mu_nl = substr("$m_mu_nl",1,5) local m_mu_nl_p5 = substr("$m_mu_nl_p5",1,5) local m_mu_nl_p95 = substr("$m_mu_nl_p95",1,5) local m_mu_nl_p10 = substr("$m_mu_nl_p10",1,5) local m_mu_nl_p90 = substr("$m_mu_nl_p90",1,5) local ci_a_md_tris =  "[  `a_md_tris_p5'    ,   `a_md_tris_p95' ]  "  local ci_a_mu_tris =  "[  `a_mu_tris_p5'    ,   `a_mu_tris_p95' ]  "  local ci_m_md_tris =  "[  `m_md_tris_p5'    ,   `m_md_tris_p95' ]  "  local ci_m_mu_tris =  "[  `m_mu_tris_p5'    ,   `m_mu_tris_p95' ]  "  local ci_a_md_nl =  "[  `a_md_nl_p5'    ,   `a_md_nl_p95' ]  "  local ci_a_mu_nl =  "[  `a_mu_nl_p5'    ,   `a_mu_nl_p95' ]  "  local ci_m_md_nl =  "[  `m_md_nl_p5'    ,   `m_md_nl_p95' ]  "  local ci_m_mu_nl =  "[  `m_mu_nl_p5'    ,   `m_mu_nl_p95' ]  "  local ci_a_md_trisb =  "[  `a_md_tris_p10'    ,   `a_md_tris_p90' ]  "  local ci_a_mu_trisb =  "[  `a_mu_tris_p10'    ,   `a_mu_tris_p90' ]  "  local ci_m_md_trisb =  "[  `m_md_tris_p10'    ,   `m_md_tris_p90' ]  "  local ci_m_mu_trisb =  "[  `m_mu_tris_p10'    ,   `m_mu_tris_p90' ]  "  local ci_a_md_nlb =  "[  `a_md_nl_p10'    ,   `a_md_nl_p90' ]  "  local ci_a_mu_nlb =  "[  `a_mu_nl_p10'    ,   `a_mu_nl_p90' ]  "  local ci_m_md_nlb =  "[  `m_md_nl_p10'    ,   `m_md_nl_p90' ]  "  local ci_m_mu_nlb =  "[  `m_mu_nl_p10'    ,   `m_mu_nl_p90' ]  "  di "`a_mu_nl'"di "`m_m_nl'"di "`ci_a_md_nlb'"/* Create Table A2  */   esttab  leafsup_nl leafsup_nl_se leafsup_tris leafsup_tris_se using "/Users/MichaelRubens/Dropbox/China tobacco/Paper/aer_2021_0383/tables/tableA2.tex", replace ///prehead( "\textit{panel A: Leaf supply estimates}" &  \multicolumn{2}{c}{Outside option = all industries} &  \multicolumn{2}{c}{Outside option = non-agricultural}  \\ \cline{2-5})   /// mtitle("Est." "S.E." "Est." "S.E." )   ///cells(mean(fmt(3))) label booktabs nonum noobs collabels(none) gaps f    prefoot(\vspace{-0.75em} \\  \vspace{0.25em} 1st stage F-stat (leaf price) &  \multicolumn{2}{c}{`F1_nl'} &  \multicolumn{2}{c}{`F1_tris'}      \\  ///   1st stage F-stat (market share) &  \multicolumn{2}{c}{`F2_nl'} &  \multicolumn{2}{c}{`F2_tris'}     \vspace{0.25em} \\    ///    R-squared &  \multicolumn{2}{c}{`r2_nl'} &  \multicolumn{2}{c}{`r2_tris'}   \\  \vspace{0.25em} ///  Observations &  \multicolumn{2}{c}{`N_nl'} &  \multicolumn{2}{c}{`N_tris'}        ///   \vspace{0.25em} \\\hline  \multicolumn{1}{l}{ "\textit{panel B: Markdown, markup}" } & \multicolumn{2}{c}{Markdown}& \multicolumn{2}{c}{Markup}  \\ ///\vspace{-1em}\\ \cline{2-5}  \multicolumn{1}{l}{  }  & \multicolumn{1}{c}{Average} & \multicolumn{1}{c}{Median }   & \multicolumn{1}{c}{Average} & \multicolumn{1}{c}{Median }   \vspace{0.25em}    \\\hline  ///\\ Moment & \multicolumn{1}{c}{`a_md_nl'} & \multicolumn{1}{c}{`m_md_nl'} & \multicolumn{1}{c}{`a_mu_nl'} & \multicolumn{1}{c}{`m_mu_nl'} \vspace{0.25em}  \vspace{0.25em}  \\ /// 5\%-95\% C.I. & \multicolumn{1}{c}{`ci_a_md_nl'} & \multicolumn{1}{c}{`ci_m_md_nl'} & \multicolumn{1}{c}{`ci_a_mu_nl'} & \multicolumn{1}{c}{`ci_m_mu_nl'} \vspace{0.25em}  \vspace{0.25em}  \\ /// ///)  posthead( \hline &&&\\   )   gen th = .label var th "1(Year$\geq$2002)*1(treatment)"  esttab  th_lmd_nl th_lmd_nl_se th_lmu_nl th_lmu_nl_se using "/Users/MichaelRubens/Dropbox/China tobacco/Paper/aer_2021_0383/tables/tableA2.tex", append ///prehead(\hline "\textit{panel C: Consolidation effects  }" &  \multicolumn{2}{c}{log(Markdown)} &  /// \multicolumn{2}{c}{log(Markup)}  \\ \cline{2-5})   /// mtitle("Est." "S.E." "Est." "S.E." )   ///cells(mean(fmt(3))) label booktabs nonum noobs collabels(none) gaps f   prefoot(\vspace{-0.75em} \\ /// \vspace{0.25em}  /// R-squared &  \multicolumn{2}{c}{`r2_md_nl_dq6'} &  \multicolumn{2}{c}{`r2_mu_nl_dq6'}   ///\vspace{0.25em}  \\   Observations &  \multicolumn{2}{c}{`N_md_nl_dq6'} &  \multicolumn{2}{c}{`N_mu_nl_dq6'} \vspace{0.25em}   \\  \hline)  posthead( \hline &&& \\   )       